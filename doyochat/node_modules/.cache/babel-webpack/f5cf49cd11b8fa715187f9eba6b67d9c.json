{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'http://51.124.249.185/api/';\n      this.profile_key = 'profile';\n    }\n\n    saveUserImage(dataImage) {\n      let str = dataImage.slice(22, -1);\n      let data = {\n        icon: str\n      };\n      return this.http.post(this.url + 'editData', data).pipe(tap(resp => {\n        console.log(\"editData\", resp);\n        this.setIcon(resp.icon);\n      }));\n    }\n\n    saveUserName(username_) {\n      let data = {\n        username: username_\n      };\n      this.http.post(this.url + 'editData', data).subscribe(resp => {\n        console.log(resp);\n      });\n    }\n\n    searchUser(value) {\n      console.log(value);\n      let data = {\n        username: value\n      };\n      return this.http.post(this.url + 'friend/searchUsers', data).pipe(tap(resp => {\n        console.log(resp);\n      }));\n    }\n\n    cancelRequest(username_) {\n      let data = {\n        username: username_\n      };\n      return this.http.post(this.url + 'friend/cancelRequest', data).pipe(tap(resp => {\n        console.log(resp);\n      }));\n    }\n\n    acceptRequest(username_) {\n      let data = {\n        username: username_\n      };\n      return this.http.post(this.url + 'friend/acceptRequest', data).pipe(tap(resp => {\n        console.log(resp);\n      }));\n    }\n\n    deleteFriend(username_) {\n      let data = {\n        username: username_\n      };\n      return this.http.post(this.url + 'friend/deleteFriend', data).pipe(tap(resp => {\n        console.log(resp);\n      }));\n    }\n\n    addFriend(username_) {\n      let data = {\n        username: username_\n      };\n      return this.http.post(this.url + 'friend/sendRequest', data).pipe(tap(resp => {\n        console.log(resp);\n      }));\n    }\n\n    setProfile(account) {\n      localStorage.setItem(this.profile_key, JSON.stringify(account));\n    }\n\n    getProfile() {\n      return JSON.parse(localStorage.getItem(this.profile_key));\n    }\n\n    setIcon(icon) {\n      localStorage.removeItem('icon');\n      localStorage.setItem('icon', icon);\n    }\n\n    getIcon() {\n      return localStorage.getItem('icon');\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}