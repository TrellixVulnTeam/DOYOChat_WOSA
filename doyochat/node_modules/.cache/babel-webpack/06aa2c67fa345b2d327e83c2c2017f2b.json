{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/User/project/DOYOChat/doyochat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { IoService } from '../io.service';\nimport { Account } from '../models/account';\nimport { DrawService } from '../services/draw.service';\nimport { UserService } from '../services/user.service';\nimport { HomeComponent } from './home.component';\ndescribe('HomeComponent', () => {\n  let component;\n  let fixture;\n  let router;\n  let userService;\n  let drawService;\n  let matDialog;\n  let matSnackBar;\n  let socketService;\n  let account = new Account('yana', 'dsdsf@fsfef', 23, [], [], []);\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    userService = jasmine.createSpyObj('UserService', ['getProfile', 'getIcon', 'saveUserName', 'setProfile']);\n    userService.getProfile = jasmine.createSpy().and.returnValue(new Account('yana', 'dsdsf@fsfef', 23, [], [], []));\n    userService.getIcon = jasmine.createSpy().and.returnValue('base64_of_animation');\n    yield TestBed.configureTestingModule({\n      declarations: [HomeComponent],\n      providers: [{\n        provide: UserService,\n        useValue: userService\n      }, {\n        provide: Router,\n        useValue: router\n      }, {\n        provide: DrawService,\n        useValue: drawService\n      }, {\n        provide: MatDialog,\n        useValue: matDialog\n      }, {\n        provide: MatSnackBar,\n        useValue: matSnackBar\n      }, {\n        provide: IoService,\n        useValue: socketService\n      }],\n      schemas: [CUSTOM_ELEMENTS_SCHEMA]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(HomeComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should change username', () => {\n    userService.setProfile = jasmine.createSpy('Aсcount з новим username'); //Шпіон для збереження змін у localstorage\n\n    userService.saveUserName = jasmine.createSpy('changedName'); //Шпіон для виклику функції запиту на сервер\n\n    component.isSubmitted = true; //Копка підтвердження змін натиснута\n\n    account.username = 'oldName'; //Початкове значення поля ім'я\n\n    component.form.setValue({\n      username: 'newname5'\n    }); //Нове введене користувачем значення\n\n    component.saveName();\n    expect(component.form.valid).toBeTruthy();\n    expect(userService.saveUserName).toHaveBeenCalled();\n    expect(userService.setProfile).toHaveBeenCalled();\n    expect(component.username).toEqual('newname5');\n  });\n});","map":{"version":3,"sources":["C:/Users/User/project/DOYOChat/doyochat/src/app/home/home.component.spec.ts"],"names":["CUSTOM_ELEMENTS_SCHEMA","TestBed","MatDialog","MatSnackBar","Router","IoService","Account","DrawService","UserService","HomeComponent","describe","component","fixture","router","userService","drawService","matDialog","matSnackBar","socketService","account","beforeEach","jasmine","createSpyObj","getProfile","createSpy","and","returnValue","getIcon","configureTestingModule","declarations","providers","provide","useValue","schemas","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","setProfile","saveUserName","isSubmitted","username","form","setValue","saveName","valid","toHaveBeenCalled","toEqual"],"mappings":"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","sourcesContent":["import { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { IoService } from '../io.service';\r\nimport { Account } from '../models/account';\r\nimport { DrawService } from '../services/draw.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { HomeComponent } from './home.component';\r\ndescribe('HomeComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    let router;\r\n    let userService;\r\n    let drawService;\r\n    let matDialog;\r\n    let matSnackBar;\r\n    let socketService;\r\n    let account = new Account('yana', 'dsdsf@fsfef', 23, [], [], []);\r\n    beforeEach(async () => {\r\n        userService = jasmine.createSpyObj('UserService', ['getProfile', 'getIcon', 'saveUserName', 'setProfile']);\r\n        userService.getProfile = jasmine.createSpy().and.returnValue(new Account('yana', 'dsdsf@fsfef', 23, [], [], []));\r\n        userService.getIcon = jasmine.createSpy().and.returnValue('base64_of_animation');\r\n        await TestBed.configureTestingModule({\r\n            declarations: [HomeComponent],\r\n            providers: [\r\n                {\r\n                    provide: UserService,\r\n                    useValue: userService\r\n                },\r\n                {\r\n                    provide: Router,\r\n                    useValue: router\r\n                },\r\n                {\r\n                    provide: DrawService,\r\n                    useValue: drawService\r\n                },\r\n                {\r\n                    provide: MatDialog,\r\n                    useValue: matDialog\r\n                },\r\n                {\r\n                    provide: MatSnackBar,\r\n                    useValue: matSnackBar\r\n                },\r\n                {\r\n                    provide: IoService,\r\n                    useValue: socketService,\r\n                }\r\n            ],\r\n            schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(HomeComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('should change username', () => {\r\n        userService.setProfile = jasmine.createSpy('Aсcount з новим username'); //Шпіон для збереження змін у localstorage\r\n        userService.saveUserName = jasmine.createSpy('changedName'); //Шпіон для виклику функції запиту на сервер\r\n        component.isSubmitted = true; //Копка підтвердження змін натиснута\r\n        account.username = 'oldName'; //Початкове значення поля ім'я\r\n        component.form.setValue({ username: 'newname5' }); //Нове введене користувачем значення\r\n        component.saveName();\r\n        expect(component.form.valid).toBeTruthy();\r\n        expect(userService.saveUserName).toHaveBeenCalled();\r\n        expect(userService.setProfile).toHaveBeenCalled();\r\n        expect(component.username).toEqual('newname5');\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}