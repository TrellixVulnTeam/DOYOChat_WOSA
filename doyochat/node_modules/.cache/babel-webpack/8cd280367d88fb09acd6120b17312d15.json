{"ast":null,"code":"import { HttpResponse } from \"@angular/common/http\";\nimport { tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport let ApiInterceptor = /*#__PURE__*/(() => {\n  class ApiInterceptor {\n    constructor(auth) {\n      this.auth = auth;\n    }\n\n    intercept(req, next) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this.auth.getAccessToken()}` //Authorization: this.auth.getAccessToken()\n\n        }\n      });\n      console.log(\"interceptor has been called\");\n      return next.handle(req).pipe(tap(event => {\n        if (event instanceof HttpResponse) {\n          console.log('Server has responded');\n        }\n      }, err => {\n        //     if (err instanceof HttpErrorResponse) {\n        // //     if (this.jwtHelper.isTokenExpired(this.auth.getToken())){\n        // //        this.auth.logout();\n        // //        this.router.navigate(['']);\n        //     }\n        if (err.status == 401) alert('Неправильный пароль или электронная почта');else console.log('Server responded without error');\n      }));\n    }\n\n  }\n\n  ApiInterceptor.ɵfac = function ApiInterceptor_Factory(t) {\n    return new (t || ApiInterceptor)(i0.ɵɵinject(i1.AuthService));\n  };\n\n  ApiInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiInterceptor,\n    factory: ApiInterceptor.ɵfac\n  });\n  return ApiInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}